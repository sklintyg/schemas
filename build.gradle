plugins {
    id "se.inera.intyg.plugin.common" version "3.2.4" apply false
    id "io.spring.dependency-management" version "1.0.13.RELEASE" apply false
    id "com.yupzip.wsdl2java" version "2.3.2" apply false
}

allprojects {
    apply plugin: "io.spring.dependency-management"
    apply plugin: 'se.inera.intyg.plugin.common'
    apply plugin: 'maven-publish'

    ext {
        cxfVersion = "3.5.5"
        guavaVersion = "31.1-jre"
        jaxb2Version = "0.13.1"
        jaxbImplVersion = "2.3.6"
        jaxb2NamespacePrefixVersion = "1.3"
        phSchematronVersion = "5.6.5"
        // Errorprone has no mechanism (yet) for excluding generated code. We hence only use it for 'schemas-support'.
        errorproneExclude = ".*-schemas\$"

        springbootMavenBomVersion = "2.7.6"
    }

    sourceCompatibility = 11
    targetCompatibility = 11

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springbootMavenBomVersion}"
        }
    }

    dependencies {
        implementation "org.apache.cxf:cxf-rt-frontend-jaxws:${cxfVersion}"
        implementation "org.apache.cxf:cxf-rt-transports-http:${cxfVersion}"
        implementation "org.jvnet.jaxb2_commons:jaxb2-basics-runtime:${jaxb2Version}"
        implementation "org.jvnet.jaxb2_commons:jaxb2-namespace-prefix:${jaxb2NamespacePrefixVersion}"

        // These dependencies are added automatically by plugin com.yupzip.wsdl2java (https://github.com/yupzip/wsdl2java)
        // but are kept for now to minimize risk.
        implementation "javax.xml.bind:jaxb-api:2.3.1"
        implementation "javax.xml.ws:jaxws-api:2.3.1"
        implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"
        implementation "org.glassfish.main.javaee-api:javax.jws:3.1.2.2"
        implementation "com.sun.xml.messaging.saaj:saaj-impl:1.5.1"

        testImplementation "junit:junit"
        testImplementation "org.mockito:mockito-junit-jupiter"
        testImplementation "org.mockito:mockito-core"
        testImplementation "org.junit.jupiter:junit-jupiter-api"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
        testRuntimeOnly "org.junit.vintage:junit-vintage-engine"
    }

    if (project.name.endsWith("-schemas")) {
        apply plugin: 'com.yupzip.wsdl2java'

        sourceSets.main.java.srcDirs += "build/generatedSource/java"
        sourceSets.main.resources.srcDirs += file("schemas")

        wsdl2java {
            wsdlDir = file('schemas')
            generatedWsdlDir = file("build/generatedSource/java")
            cxfVersion = project.getProperties().get("cxfVersion")
        }

        dependencies {
            wsdl2java "org.jvnet.jaxb2_commons:jaxb2-basics-runtime:${jaxb2Version}"
            wsdl2java "org.jvnet.jaxb2_commons:jaxb2-basics:${jaxb2Version}"
            wsdl2java "org.jvnet.jaxb2_commons:jaxb2-namespace-prefix:${jaxb2NamespacePrefixVersion}"
            wsdl2java "com.sun.xml.bind:jaxb-impl:${jaxbImplVersion}"

            // These dependencies are added automatically by plugin com.yupzip.wsdl2java (https://github.com/yupzip/wsdl2java)
            // but are kept for now to minimize risk.
            wsdl2java "javax.xml.bind:jaxb-api:2.3.1"
            wsdl2java "javax.xml.ws:jaxws-api:2.3.1"
            wsdl2java "org.glassfish.jaxb:jaxb-runtime:2.3.2"
            wsdl2java "org.glassfish.main.javaee-api:javax.jws:3.1.2.2"
            wsdl2java "com.sun.xml.messaging.saaj:saaj-impl:1.5.1"
        }
    }

    if (project.hasProperty("codeQuality")) {
        license {
            exclude "**/*.java" // Exclude all.
        }
    }

    repositories {
        maven { url "https://nexus.drift.inera.se/repository/it-public/" }
        mavenCentral {
            content {
                // this repository contains everything BUT artifacts with group starting with "se.inera"
                excludeGroupByRegex "se\\.inera.*"
            }
        }
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
            }
        }
        repositories.maven {
            url = uri("http://172.21.0.1:3737/repository/maven-releases/")
            //url = uri("https://nexus.drift.inera.se/repository/maven-releases/")
            credentials {
                username = System.properties['ineraNexusUsername']
                password = System.properties['ineraNexusPassword']
            }
        }
    }

    tasks.register('tagRelease', TagReleaseTask)
}

subprojects {
    test {
        useJUnitPlatform()
    }

    tasks.register('install') {
        description("Publishes artifact to local maven repository.")
        dependsOn(publishMavenPublicationToMavenLocal)
    }
}

configure(subprojects.findAll { !['support', 'intyg-clinicalprocess-healthcond-certificate-schematron'].contains(it.name) }) {
    dependencies {
        implementation "se.inera.intyg.schemas:schemas-support:2.1.5"
    }
}
