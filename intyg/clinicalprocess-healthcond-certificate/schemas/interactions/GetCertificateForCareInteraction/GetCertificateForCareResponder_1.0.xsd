<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2016 Inera AB (http://www.inera.se)
  ~
  ~ This file is part of sklintyg (https://github.com/sklintyg).
  ~
  ~ sklintyg is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ sklintyg is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<schema xmlns="http://www.w3.org/2001/XMLSchema"
        targetNamespace="urn:riv:clinicalprocess:healthcond:certificate:GetCertificateForCareResponder:1"
        xmlns:tns="urn:riv:clinicalprocess:healthcond:certificate:GetCertificateForCareResponder:1"
        xmlns:c="urn:riv:clinicalprocess:healthcond:certificate:1" elementFormDefault="qualified">

  <import schemaLocation="../../core_components/clinicalprocess_healthcond_certificate_1.0.xsd" namespace="urn:riv:clinicalprocess:healthcond:certificate:1"/>

  <element name="GetCertificateForCare" type="tns:GetCertificateForCareRequestType"/>
  <complexType name="GetCertificateForCareRequestType">
    <sequence>
      <element name="certificateId" type="string" minOccurs="1" maxOccurs="1"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>

  <element name="GetCertificateForCareResponse" type="tns:GetCertificateForCareResponseType"/>
  <complexType name="GetCertificateForCareResponseType">
    <sequence>
      <element name="meta" type="c:CertificateMetaType" minOccurs="0" maxOccurs="1"/>
      <element name="certificate" type="c:Utlatande" minOccurs="0" maxOccurs="1"/>
      <element name="result" type="c:ResultType"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
</schema>
