<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2016 Inera AB (http://www.inera.se)
  ~
  ~ This file is part of sklintyg (https://github.com/sklintyg).
  ~
  ~ sklintyg is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ sklintyg is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<schema xmlns="http://www.w3.org/2001/XMLSchema"
  targetNamespace="urn:riv:insuranceprocess:healthreporting:GetConsentResponder:1"
  xmlns:tns="urn:riv:insuranceprocess:healthreporting:GetConsentResponder:1"
  elementFormDefault="qualified"
  xmlns:pref2="urn:riv:insuranceprocess:healthreporting:2">

  <import schemaLocation="../../core_components/iso_dt_subset_1.0.xsd" namespace="urn:iso:21090:dt:1" />
  <import schemaLocation="../../core_components/insuranceprocess_healthreporting_2.0.xsd" namespace="urn:riv:insuranceprocess:healthreporting:2" />
  <import schemaLocation="../../core_components/insuranceprocess_certificate_1.0.xsd" namespace="urn:riv:insuranceprocess:certificate:1" />

  <element name="GetConsentRequest" type="tns:GetConsentRequestType"></element>
  <complexType name="GetConsentRequestType">
    <sequence>
      <element name="personnummer" type="string" minOccurs="1" maxOccurs="1"></element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
    </sequence>
  </complexType>

  <element name="GetConsentResponse" type="tns:GetConsentResponseType"></element>
  <complexType name="GetConsentResponseType">
    <sequence>
      <element name="consent-given" type="boolean" maxOccurs="1" minOccurs="1" />
      <element name="result" type="pref2:ResultOfCall" minOccurs="0" maxOccurs="1" />
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
    </sequence>
  </complexType>
</schema>
