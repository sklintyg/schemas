package se.inera.webcert.sendmedicalcertificateanswer.v1.rivtabp20;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.5
 * 2014-10-31T14:33:12.246+01:00
 * Generated source version: 2.7.5
 * 
 */
@WebServiceClient(name = "SendMedicalCertificateAnswerResponderService", 
                  wsdlLocation = "file:/Users/Joakim/Projects/Inera/Utveckling/schemas/webcert/src/main/resources/schemas/insuranceprocess_healthreporting/interactions/SendMedicalCertificateAnswerInteraction/SendMedicalCertificateAnswerInteraction_1.0_rivtabp20.wsdl",
                  targetNamespace = "urn:riv:insuranceprocess:healthreporting:SendMedicalCertificateAnswer:1:rivtabp20") 
public class SendMedicalCertificateAnswerResponderService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("urn:riv:insuranceprocess:healthreporting:SendMedicalCertificateAnswer:1:rivtabp20", "SendMedicalCertificateAnswerResponderService");
    public final static QName SendMedicalCertificateAnswerResponderPort = new QName("urn:riv:insuranceprocess:healthreporting:SendMedicalCertificateAnswer:1:rivtabp20", "SendMedicalCertificateAnswerResponderPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/Joakim/Projects/Inera/Utveckling/schemas/webcert/src/main/resources/schemas/insuranceprocess_healthreporting/interactions/SendMedicalCertificateAnswerInteraction/SendMedicalCertificateAnswerInteraction_1.0_rivtabp20.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SendMedicalCertificateAnswerResponderService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/Users/Joakim/Projects/Inera/Utveckling/schemas/webcert/src/main/resources/schemas/insuranceprocess_healthreporting/interactions/SendMedicalCertificateAnswerInteraction/SendMedicalCertificateAnswerInteraction_1.0_rivtabp20.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SendMedicalCertificateAnswerResponderService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SendMedicalCertificateAnswerResponderService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SendMedicalCertificateAnswerResponderService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public SendMedicalCertificateAnswerResponderService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public SendMedicalCertificateAnswerResponderService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public SendMedicalCertificateAnswerResponderService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns SendMedicalCertificateAnswerResponderInterface
     */
    @WebEndpoint(name = "SendMedicalCertificateAnswerResponderPort")
    public SendMedicalCertificateAnswerResponderInterface getSendMedicalCertificateAnswerResponderPort() {
        return super.getPort(SendMedicalCertificateAnswerResponderPort, SendMedicalCertificateAnswerResponderInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SendMedicalCertificateAnswerResponderInterface
     */
    @WebEndpoint(name = "SendMedicalCertificateAnswerResponderPort")
    public SendMedicalCertificateAnswerResponderInterface getSendMedicalCertificateAnswerResponderPort(WebServiceFeature... features) {
        return super.getPort(SendMedicalCertificateAnswerResponderPort, SendMedicalCertificateAnswerResponderInterface.class, features);
    }

}
